upstream back_server {
     #server    127.0.0.1:8001;#连接my_uwsgi
    server      unix:///root/sc_git/sc_api/my_sock.sock;
}
# upstram mysvr {
#     server 192.168.10.121:3333;
#     server 192.168.10.122:3333;
#     server 192.168.19.123:3333 weight=2;
# }

# server {
#     ....
#     location  ~*^.+$ {
#         proxy_pass  http://mysvr;  #请求转向mysvr 定义的服务器列表
#     }
server {
    listen      80;  # 端口号
    server_name www.centyuan.top centyuan.top;  # 服务器 ip 或是域名
    charset     utf-8;  # 字符集

    access_log  /root/centyuanblog/logs/my_access.log;
    error_log   /root/centyuanblog/logs/my_error.log;
    # 最大上传限制
    # client_max_body_size 75M;

    location /media  {
        alias /root/centyuanblog/media_common;  # 媒体文件所在文件夹
    }

    location /static {
        alias /root/centyuanblog/static_common;  # 静态文件所在文件夹
    }

    # 将所有非媒体请求转到Django服务器上
    location / {
        #uwsgi_pass  127.0.0.1:8001;
        #uwsgi_pass  back_server;
        uwsgi_pass     unix:///root/centyuanblog/myblog_sock.sock;  # 最上方已定义
        """
        fastcgi_pass：将请求传递给 fastCGI 服务器。
        uwsgi_pass：将请求传递给 uwsgi 服务器。
        scgi_pass：将请求传递给 SCGI 服务器。
        memcached_pass：将请求传递给 memcached 服务器。
        """

        # 将所有参数都转到uwsgi下
        include  /root/centyuanblog/uwsgi_params;
    }

}

# 实例配置
#user nginx;
user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       9000;
        listen       [::]:9000;
        #auth_basic "please authentication";
        #auth_basic_user_file /data/passwd.txt;
        server_name  gfp.ansrouter.net;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        location = /api/upload_id {
             include uwsgi_params;
             uwsgi_pass 127.0.0.1:8000;
        }
        location / {
            include uwsgi_params;
            uwsgi_pass 127.0.0.1:8000;
            auth_basic "please authentication";
            auth_basic_user_file  /data/passwd.txt;
        }

        location /static/ {
            alias /data/ANS/static/;
        }
        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }
    # 配置两个server 分别监听9000,9999端口,后端端口改变
     server {
        listen       9999;
        listen       [::]:9999;
        #auth_basic "please authentication";
        #auth_basic_user_file /data/passwd.txt;
        server_name  gfp.ansrouter.net;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;
        location = /api/upload_id {
             include uwsgi_params;
             uwsgi_pass 127.0.0.1:8001;
             # proxy_pass 127.0.0.1:8001;
        }
        location / {
            include uwsgi_params;
            uwsgi_pass 127.0.0.1:8001;
            auth_basic "please authentication";
            auth_basic_user_file  /data/passwd.txt;
        }

        location /static/ {
            alias /data/ANS/static/;
        }
        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }


# 优先级:(location =) > (location 完整路径) > (location ^~ 路径) > (location ~,~* 正则顺序) > (location 部分起始路径) > (/)
