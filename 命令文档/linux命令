### liunu常用命令 ###
su切换用户后:在终端输入exit或logout或使用快捷方式ctrl+d，可以退回到原来用户，其实ctrl+d也是执行的exit命令
sudo : 暂时切换到超级用户模式以执行超级用户权限，提示输入密码时该密码为当前用户的密码，而不是超级账户的密码。不过有时间限制，Ubuntu默认为一次时长15分钟。
su ： 切换到某某用户模式，提示输入密码时该密码为切换后账户的密码，用法为“su 账户名称”。如果后面不加账户时系统默认为root账户，密码也为超级账户的密码。没有时间限制。
sudo -i: 为了频繁的执行某些只有超级用户才能执行的权限，而不用每次输入密码，可以使用该命令。提示输入密码时该密码为当前账户的密码。没有时间限制。执行该命令后提示符变为“#”而不是“$”。想退回普通账户时可以执行“exit”或“logout” 。

&  表示任务在后台执行，如要在后台运行redis-server,则有  redis-server &
&& 表示前一条命令执行成功时，才执行后一条命令 ，如 echo '1‘ && echo '2'
| 表示管道，上一条命令的输出，作为下一条命令参数，如 echo 'yes' | wc -l
|| 表示上一条命令执行失败后，才执行下一条命令，如 cat nofile || echo "fail"
&和nohup 区别:
&:1.结果输出到终端，2.Ctrl+c发送SIGINT信号，程序免疫,3.关闭session发送SIGHUP信号,程序关闭
nohup:1.结果默认输出到nohup.out,2.Ctrl+c发送SIGINT信号,程序关闭,3.关闭session发送SIGHUP信号，程序免疫
不挂断后台运行(nohup $ 同时使用)
nohup python run.py >aceess.log 2>&1  &
nohup python3 -u manage.py runserver 0.0.0.0:8001 > out.log 2>&1 &
# &> 解释:
表示stdout标准输出和stderr错误输出信息，重定向输出，覆盖写。
# 2>&1 解释：
将标准错误 2 重定向到标准输出 &1 ，在将标准输出 &1 再被重定向输入到 gunicorn.log
# 2>1 解释:
表示把标准错误的输出重定向到1，但这个1不是标准输出，而是一个名为1的文件。

nohup python manage.py runserver 0.0.0.0:8001 &

# 查看文件命令(cat tac nl more less head tail)

# 搜索文件命令(whereis which find locate)

whereis    查看可执行文件的位置(搜索很快,从数据库中差,不从硬盘中查,只能搜索二进制文件-b man帮助文件-m,和源代码文件 -s)
locate     配合数据库查看文件位置(快而全,通过/var/lib/mlocate/mlocate.db数据库查找,每天自动更新一次)
它可以用来查找指定目录下的不同文件类型，如查找 /etc 下所有以 sh 开头的文件：
locate /etc/sh
which      通常用来确定是否安装指定的软件,因为只从PATH环境变量制定的路径中取搜索命令
find          实际搜寻硬盘查询文件名称(最强大的,可以通过文件的时间戳,文件的权限)

# 显示目录或文件的大小
du -h /home/centyuan
df -h：命令查看了一下磁盘使用情况
df -i：查看了一下/data分区的索引节点(inode)，发现已经用满(IUsed=100%)，导致系统无法创建新目录和文件

rz:上传文件
sz:下载文件

、