1.轮询(默认)
# 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。
upstream backserver {
    server 192.168.0.11;
    server 192.168.0.12;
}

2 weight 权重
# 指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。
upstream backserver {
    server 192.168.0.11 weight=3;
    server 192.168.0.12 weight=7;
}

3 ip_hash(可用于会话保持)
# 每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器 (不能绝对的负载均衡)
upstream backserver {
    ip_hash;
    server 192.168.0.11:8001
    server 192.168.0.12:8002
}
4 fair（第三方）
# 按后端服务器的响应时间来分配请求，响应时间短的优先分配。
upstream backserver {
    server server1;
    server server2;
    fair;
}

5 url_hash(第三方需装插件)
# 按访问url的hash结果来分配请求，使每个url定向到同一个（对应的）后端服务器，后端服务器为缓存时比较有效。
upstream backserver {
    server squid1:3128;
    server squid2:3128;
    hash $request_uri;
    hash_method crc32;
}