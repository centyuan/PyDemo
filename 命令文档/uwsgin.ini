[uwsgi]
# 项目目录
chdir = /root/centyuanblog/
# 项目中wsgi.py文件的目录
wsgi-file = /root/centyuanblog/centyaunblog/wsgi.py
# 允许主进程存在（enable master process）
master = true
#logto=/root/sc_git/sc_api/logs/uwsgi.log
# 使得uwsgi.log文件被转存后能继续在uwsgi.log文件中写入日志，且不会中断当前程序的执行
touch-logreopen=/root/centyuanblog/logs/.touchforlogrotate
#监听项目目录下的touchforlogrotat文件，如果文件发生变化，就重新打开日志
# 多进程&多线程
processes = 10
threads = 2
# 服务停止时，自动移除unix socket和pid文件
vacuum = true
# 记录主进程PID号
#指定PID文件的位置，记录主进程的PID号
pidfile=uwsgi.pid
# 为每个工作进程设置请求数的上限。当处理的请求总数超过这个量，进程回收重启。
max-requests=5000
#使进程在后台运行，并将日志输出到指定的日志文件或者UDP服务器
daemonize=/root/centyuanblog/logs/uwsgi.log
#当一个请求被harakiri杀掉会输出一条日志
harakiri-verbose=true
# uWsgi默认的buffersize为4096，如果请求数据超过这个量会报错。这里设置为64k
buffer-size=65536
# 如果http请求体的大小超过指定的限制，打开http body缓冲，这里为64k
post-buffering=65536
#开启内存使用情况报告
memory-report=true
#设置平滑的重启（直到处理完接收到的请求）的长等待时间(秒)
reload-mercy=10
#设置工作进程使用虚拟内存超过多少MB就回收重启
reload-on-as=1024
# .sock文件目录需与Nginx文件内的配置相同,和nginx关联,仅限于在同一主机上
socket = /root/centyuanblog/myblog_sock.sock
chmod-socket = 666
# log-maxsize ：以固定的文件大小（单位KB），切割日志文件。
log-maxsize = 50000000  就是50M一个日志文件。
# disable-logging ：不记录请求信息的日志。只记录错误以及uWSGI内部消息到日志中。如果不开启这项，那么你的日志中会大量出现这种记录：
# stats ： 在指定的地址上，开启状态服务（enable the stats server on the specified address）
# home = %(base)/Env/%(project) # 设置项目虚拟环境,Docker部署时不需要
# virtualenv = /data/venv/FZ  # 指定虚拟环境

# uwsgi --ini uwsgi.ini # 启动
# uwsgi --reload uwsgi.pid # 重启
# uwsgi --stop uwsgi.pid # 关闭
"""
uWSGI和Nginx之间有3种通信方式, unix socket，TCP socket和http。Nginx的配置必须与uwsgi配置保持一致。
# 1. unix socket 仅限于同一主机:优先使用本地机器的unix socket进行通信，这样速度更快
socket = /root/project/my_sock.sock
location / {
    include /etc/nginx/uwsgi_params;
    uwsgi_pass unix:/run/uwsgi/project.sock;
}
# 2. Tcp socket
socket = 0.0.0.0:8000 或socket=:8000
location / {
    include /etc/nginx/uwsgi_params;
    uwsgi_pass uWSGI_SERVER_IP:8000;
}
# 3. http
http = 0.0.0.0:8000
location / {
    # 注意：proxy_pass后面http必不可少哦！
    proxy_pass http://uWSGI_SERVER_IP:8000;
}
"""
# 实例配置
[uwsgi]
chdir = /data/ANS/
wsgi-file = /data/ANS/ANS/wsgi.py
master = true
processes = 10
threads = 2
# .sock文件目录需与Nginx文件内的配置相同,和nginx关联
# socket = /root/ANS/ans_sock.socko
socket = 127.0.0.1:8000
chmod-socket = 666
vacuum = true
pidfile=/data/ANS/uwsgi.pid
daemonize=/data/ANS/logs/uwsgi.log
log-maxsize = 50000000